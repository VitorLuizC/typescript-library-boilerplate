{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * A Branded Type for values parseable to number.\n */\nexport type NumberParseable = (number | string | boolean) & {\n  readonly isNumberParseble: unique symbol;\n};\n\n/**\n * Check if value is parseable to number.\n * @example\n * ```js\n * isNumberParseable('AAAA');\n * //=> false\n *\n * isNumberParseable('100');\n * //=> true\n *\n * if (!isNumberParseable(value))\n *   throw new Error('Value can\\'t be parseable to `Number`.')\n * return Number(value);\n * ```\n * @param value - An `unknown` value to be checked.\n */\nexport const isNumberParseable = (value: unknown): value is NumberParseable =>\n  !Number.isNaN(Number(value));\n"],"names":[],"mappings":";;;;;;AAOA;;;;;;;;;;;;;;;AAeG;AACI,IAAM,iBAAiB,GAAG,UAAC,KAAc,EAAA;IAC9C,OAAA,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;AAA5B;;;;"}